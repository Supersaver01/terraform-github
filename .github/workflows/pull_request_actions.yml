name: Merge and pull request to main branch
on:
  workflow_dispatch:
    inputs:
      lock_id:
        description: 'Terraform Lock ID to force unlock terraform state'
        required: true
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  TERRAFORM_VERSION: 1.3.5
  TERRAFORM_WORKING_DIR: './'

permissions:
  contents: write
  issues: write
  id-token: write

concurrency: dev-reinvent

jobs:
  kics:
    name: "Run KICS scan on Terraform code"
    uses: ./.github/workflows/terraform_kics.yml
    with:
      ENABLE_COMMENTS: true
      WORKING_DIRECTORY: './'

  plan:
    name: "Terraform Init, Validate and Plan"
    needs: [ kics ]
    if: needs.kics.outputs.kics_status == 'success' && github.event_name == 'pull_request'
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ${{ env.TERRAFORM_WORKING_DIR }}
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
        with:
           ref: ${{ github.event.pull_request.head.ref }}
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
          terraform_wrapper: true
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Terraform Init
        id: init
        run: terraform init
      - name: Terraform Validate
        id: validate
        run: terraform validate
      - name: Terraform Plan
        id: plan
        run: terraform plan
        continue-on-error: true

  apply:
    name: "Terraform Apply"
    needs: [ plan ]
    if: github.event_name == 'push' && needs.kics.outputs.kics_status == 'success'
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ${{ env.TERRAFORM_WORKING_DIR }}
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
          terraform_wrapper: true
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Terraform Init
        id: init
        run: terraform init
      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve
        continue-on-error: true

  force-unlock:
    name: "Force Unlock Terraform State"
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Terraform Force Unlock
        run: |
          terraform init
          terraform force-unlock -force ${{ github.event.inputs.lock_id }}
